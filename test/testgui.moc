/****************************************************************************
** Meta object code from reading C++ file 'testgui.cpp'
**
** Created by: The Qt Meta Object Compiler version 67 (Qt 5.5.1)
**
** WARNING! All changes made in this file will be lost!
*****************************************************************************/

#include <QtCore/qbytearray.h>
#include <QtCore/qmetatype.h>
#if !defined(Q_MOC_OUTPUT_REVISION)
#error "The header file 'testgui.cpp' doesn't include <QObject>."
#elif Q_MOC_OUTPUT_REVISION != 67
#error "This file was generated using the moc from 5.5.1. It"
#error "cannot be used with the include files from this version of Qt."
#error "(The moc has changed too much.)"
#endif

QT_BEGIN_MOC_NAMESPACE
struct qt_meta_stringdata_TestGui_t {
    QByteArrayData data[24];
    char stringdata0[421];
};
#define QT_MOC_LITERAL(idx, ofs, len) \
    Q_STATIC_BYTE_ARRAY_DATA_HEADER_INITIALIZER_WITH_OFFSET(len, \
    qptrdiff(offsetof(qt_meta_stringdata_TestGui_t, stringdata0) + ofs \
        - idx * sizeof(QByteArrayData)) \
    )
static const qt_meta_stringdata_TestGui_t qt_meta_stringdata_TestGui = {
    {
QT_MOC_LITERAL(0, 0, 7), // "TestGui"
QT_MOC_LITERAL(1, 8, 25), // "testGenericInterfaceSetup"
QT_MOC_LITERAL(2, 34, 0), // ""
QT_MOC_LITERAL(3, 35, 24), // "testWindowServiceAddFile"
QT_MOC_LITERAL(4, 60, 15), // "testMenuActions"
QT_MOC_LITERAL(5, 76, 19), // "testFileServiceSave"
QT_MOC_LITERAL(6, 96, 15), // "testRemoveImage"
QT_MOC_LITERAL(7, 112, 19), // "testThresholdOpOtsu"
QT_MOC_LITERAL(8, 132, 18), // "testThresholdOp127"
QT_MOC_LITERAL(9, 151, 21), // "testThresholdOpDouble"
QT_MOC_LITERAL(10, 173, 18), // "testTranslateOpPos"
QT_MOC_LITERAL(11, 192, 18), // "testTranslateOpNeg"
QT_MOC_LITERAL(12, 211, 17), // "testRotateOpCwise"
QT_MOC_LITERAL(13, 229, 18), // "testRotateOpACwise"
QT_MOC_LITERAL(14, 248, 13), // "testFlipOpHor"
QT_MOC_LITERAL(15, 262, 13), // "testFlipOpVer"
QT_MOC_LITERAL(16, 276, 21), // "testScalingOpBilinear"
QT_MOC_LITERAL(17, 298, 20), // "testScalingOpNearest"
QT_MOC_LITERAL(18, 319, 14), // "testCombineRGB"
QT_MOC_LITERAL(19, 334, 29), // "testPyramidOpGaussianGaussian"
QT_MOC_LITERAL(20, 364, 15), // "testPseudocolor"
QT_MOC_LITERAL(21, 380, 8), // "testTEST"
QT_MOC_LITERAL(22, 389, 13), // "testCompQuant"
QT_MOC_LITERAL(23, 403, 17) // "testCompThreshold"

    },
    "TestGui\0testGenericInterfaceSetup\0\0"
    "testWindowServiceAddFile\0testMenuActions\0"
    "testFileServiceSave\0testRemoveImage\0"
    "testThresholdOpOtsu\0testThresholdOp127\0"
    "testThresholdOpDouble\0testTranslateOpPos\0"
    "testTranslateOpNeg\0testRotateOpCwise\0"
    "testRotateOpACwise\0testFlipOpHor\0"
    "testFlipOpVer\0testScalingOpBilinear\0"
    "testScalingOpNearest\0testCombineRGB\0"
    "testPyramidOpGaussianGaussian\0"
    "testPseudocolor\0testTEST\0testCompQuant\0"
    "testCompThreshold"
};
#undef QT_MOC_LITERAL

static const uint qt_meta_data_TestGui[] = {

 // content:
       7,       // revision
       0,       // classname
       0,    0, // classinfo
      22,   14, // methods
       0,    0, // properties
       0,    0, // enums/sets
       0,    0, // constructors
       0,       // flags
       0,       // signalCount

 // slots: name, argc, parameters, tag, flags
       1,    0,  124,    2, 0x08 /* Private */,
       3,    0,  125,    2, 0x08 /* Private */,
       4,    0,  126,    2, 0x08 /* Private */,
       5,    0,  127,    2, 0x08 /* Private */,
       6,    0,  128,    2, 0x08 /* Private */,
       7,    0,  129,    2, 0x08 /* Private */,
       8,    0,  130,    2, 0x08 /* Private */,
       9,    0,  131,    2, 0x08 /* Private */,
      10,    0,  132,    2, 0x08 /* Private */,
      11,    0,  133,    2, 0x08 /* Private */,
      12,    0,  134,    2, 0x08 /* Private */,
      13,    0,  135,    2, 0x08 /* Private */,
      14,    0,  136,    2, 0x08 /* Private */,
      15,    0,  137,    2, 0x08 /* Private */,
      16,    0,  138,    2, 0x08 /* Private */,
      17,    0,  139,    2, 0x08 /* Private */,
      18,    0,  140,    2, 0x08 /* Private */,
      19,    0,  141,    2, 0x08 /* Private */,
      20,    0,  142,    2, 0x08 /* Private */,
      21,    0,  143,    2, 0x08 /* Private */,
      22,    0,  144,    2, 0x08 /* Private */,
      23,    0,  145,    2, 0x08 /* Private */,

 // slots: parameters
    QMetaType::Void,
    QMetaType::Void,
    QMetaType::Void,
    QMetaType::Void,
    QMetaType::Void,
    QMetaType::Void,
    QMetaType::Void,
    QMetaType::Void,
    QMetaType::Void,
    QMetaType::Void,
    QMetaType::Void,
    QMetaType::Void,
    QMetaType::Void,
    QMetaType::Void,
    QMetaType::Void,
    QMetaType::Void,
    QMetaType::Void,
    QMetaType::Void,
    QMetaType::Void,
    QMetaType::Void,
    QMetaType::Void,
    QMetaType::Void,

       0        // eod
};

void TestGui::qt_static_metacall(QObject *_o, QMetaObject::Call _c, int _id, void **_a)
{
    if (_c == QMetaObject::InvokeMetaMethod) {
        TestGui *_t = static_cast<TestGui *>(_o);
        Q_UNUSED(_t)
        switch (_id) {
        case 0: _t->testGenericInterfaceSetup(); break;
        case 1: _t->testWindowServiceAddFile(); break;
        case 2: _t->testMenuActions(); break;
        case 3: _t->testFileServiceSave(); break;
        case 4: _t->testRemoveImage(); break;
        case 5: _t->testThresholdOpOtsu(); break;
        case 6: _t->testThresholdOp127(); break;
        case 7: _t->testThresholdOpDouble(); break;
        case 8: _t->testTranslateOpPos(); break;
        case 9: _t->testTranslateOpNeg(); break;
        case 10: _t->testRotateOpCwise(); break;
        case 11: _t->testRotateOpACwise(); break;
        case 12: _t->testFlipOpHor(); break;
        case 13: _t->testFlipOpVer(); break;
        case 14: _t->testScalingOpBilinear(); break;
        case 15: _t->testScalingOpNearest(); break;
        case 16: _t->testCombineRGB(); break;
        case 17: _t->testPyramidOpGaussianGaussian(); break;
        case 18: _t->testPseudocolor(); break;
        case 19: _t->testTEST(); break;
        case 20: _t->testCompQuant(); break;
        case 21: _t->testCompThreshold(); break;
        default: ;
        }
    }
    Q_UNUSED(_a);
}

const QMetaObject TestGui::staticMetaObject = {
    { &QObject::staticMetaObject, qt_meta_stringdata_TestGui.data,
      qt_meta_data_TestGui,  qt_static_metacall, Q_NULLPTR, Q_NULLPTR}
};


const QMetaObject *TestGui::metaObject() const
{
    return QObject::d_ptr->metaObject ? QObject::d_ptr->dynamicMetaObject() : &staticMetaObject;
}

void *TestGui::qt_metacast(const char *_clname)
{
    if (!_clname) return Q_NULLPTR;
    if (!strcmp(_clname, qt_meta_stringdata_TestGui.stringdata0))
        return static_cast<void*>(const_cast< TestGui*>(this));
    return QObject::qt_metacast(_clname);
}

int TestGui::qt_metacall(QMetaObject::Call _c, int _id, void **_a)
{
    _id = QObject::qt_metacall(_c, _id, _a);
    if (_id < 0)
        return _id;
    if (_c == QMetaObject::InvokeMetaMethod) {
        if (_id < 22)
            qt_static_metacall(this, _c, _id, _a);
        _id -= 22;
    } else if (_c == QMetaObject::RegisterMethodArgumentMetaType) {
        if (_id < 22)
            *reinterpret_cast<int*>(_a[0]) = -1;
        _id -= 22;
    }
    return _id;
}
QT_END_MOC_NAMESPACE
